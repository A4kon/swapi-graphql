# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""A Film resource is a single film."""
type FilmsModel {
  """The ID of the film."""
  id: ID!

  """The title of this film."""
  title: String!

  """The episode number of this film."""
  episode_id: Int!

  """The opening paragraphs at the beginning of this film."""
  opening_crawl: String!

  """The name of the director of this film."""
  director: String!

  """The name(s) of the producer(s) of this film. Comma separated."""
  producer: String!

  """
  The string date format of film release at the original creator country.
  """
  release_date: String!

  """An array of species resource URLs that are in this film."""
  species: [String!]!

  """An array of starship resource URLs that are in this film."""
  starships: [String!]!

  """An array of vehicle resource URLs that are in this film."""
  vehicles: [String!]!

  """An array of people resource URLs that are in this film."""
  characters: [String!]!

  """An array of planet resource URLs that are in this film."""
  planets: [String!]!

  """The hypermedia URL of this resource."""
  url: String!

  """The string date format of the time that this resource was created."""
  created: String!

  """The string date format of the time that this resource was edited."""
  edited: String!
}

"""stats for film opeining words in all films"""
type FilmOpeningsWordStats {
  word: String
  count: Int
}

type Query {
  updateCustomer(data: ListFilmsInput!): [FilmsModel!]!
  getFilmById(id: Int!): FilmsModel!
  getFilmOpeningsWordStats: [FilmOpeningsWordStats!]!
}

input ListFilmsInput {
  skip: Int!
  take: Int!
  cursor: String
  where: ListFilmsInputFieldsArguments
}

input ListFilmsInputFieldsArguments {
  title: String
}